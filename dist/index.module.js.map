{"version":3,"file":"index.module.js","sources":["../src/Mocks/index.ts","../src/utils/index.ts","../src/Fields/Boolean.ts","../src/Fields/Color.ts","../src/Fields/Date.ts","../src/Fields/GeoPoint.ts","../src/Fields/Image.ts","../src/Fields/Link.ts","../src/Fields/Number.ts","../src/Fields/RichText.ts","../src/Fields/Select.ts","../src/Fields/Text.ts","../src/Fields/Timestamp.ts","../src/Fields/shape.ts","../src/handlers.js"],"sourcesContent":["interface Variation {\n  id: string\n  primary: {\n    [x: string]: any;\n  },\n  items: {\n    [x: string]: any;\n  }\n}\n\ninterface Model {\n  id: string\n  name: string\n  description: string\n  variations: Variation[]\n}\n\nexport const handleField = ({\n  zone,\n  mocks,\n  fieldKey,\n  variation,\n}) => {\n  const { id: variationId } = variation\n  const { __common = {}, ...mockVariations } = mocks\n\n  if (mockVariations?.[variationId]?.[zone]?.[fieldKey]) {\n    return mockVariations[variationId][zone][fieldKey]\n  }\n  if (__common[zone]?.[fieldKey]) {\n    return __common[zone][fieldKey]\n  }\n}\n\nexport const handleVariation = (variation: Variation, zone: string, mocks: { [x: string]: any }) => {\n  const mockedFields = Object.entries(variation.primary).reduce((acc, [key]) => {\n    const maybeField = handleField({\n      zone,\n      mocks,\n      variation,\n      fieldKey: key,\n    })\n    if (maybeField) {\n      return {\n        ...acc,\n        [key]: maybeField\n      }\n    }\n    return acc\n  }, {})\n  return Object.keys(mockedFields).length ? mockedFields : null\n}\n\nexport const handle = (mocks: { [x: string]: any; }, model: Model) => {\n  return model.variations.reduce((acc: { [x: string]: any; }, variation: Variation) => {\n    const maybePrimary = handleVariation(variation, 'primary', mocks)\n    const maybeItems = handleVariation(variation, 'items', mocks)\n    return {\n      ...acc,\n      [variation.id]: {\n        primary: maybePrimary || {},\n        items: maybeItems || {}\n      }\n    }\n  }, {})\n}\n","export const createMockContent = (fn: Function) => () => ({\n  content: fn()\n})\n\nconst camelizeRE = /-(\\w)/g;\nconst hyphenateRE = /\\B([A-Z])/g;\n\nexport const camelize = (str: String) => {\n  return str.replace(/_/g, \"-\").replace(camelizeRE, (_, c) => {\n    return c ? c.toUpperCase() : \"\";\n  })\n}\n\nexport const hyphenate = (str: String) => str.replace(hyphenateRE, \"-$1\").toLowerCase()\n","import { createMockContent } from '../utils'\n\ninterface BooleanProps {\n  label?: String\n  placeholderFalse?: String\n  placeholderTrue?: String\n  defaultValue?: Boolean\n}\n\ninterface BooleanPayload {\n  type: String,\n  config: {\n    label: String\n    placeholder_false: String\n    placeholder_true: String\n    default_value: Boolean\n  }\n}\n\nconst Boolean = ({\n  label,\n  placeholderFalse,\n  placeholderTrue,\n  defaultValue\n}: BooleanProps) => (fieldName: String): BooleanPayload => ({\n  type: 'Boolean',\n  config: {\n    label: label || `${fieldName} Boolean`,\n    placeholder_true: placeholderTrue || 'true',\n    placeholder_false: placeholderFalse || 'false',\n    default_value: defaultValue != undefined ? defaultValue : true\n  }\n})\n\nBoolean.Rand = createMockContent(() => Math.random() > .5 ? true : false)\nBoolean.True = createMockContent(() => true)\nBoolean.False = createMockContent(() => false)\n\nexport default Boolean\n","import randomColor from 'randomcolor'\nimport { createMockContent } from '../utils'\n\nimport { DefaultFieldProps, DefaultPayload } from '../utils/types'\n\nconst Color = ({ label = null, placeholder = null }: DefaultFieldProps) =>\n(fieldName: String): DefaultPayload => ({\n  type: 'Color',\n  config: {\n    label: label || `${fieldName} Color`,\n    placeholder: placeholder || `${fieldName} value`,\n  }\n})\n\nColor.Rand = createMockContent(() => randomColor())\nColor.Dark = createMockContent(() => randomColor({ luminosity: 'dark' }))\nColor.Light = createMockContent(() => randomColor({ luminosity: 'light' }))\n\nexport default Color\n","import { createMockContent } from '../utils'\n\nimport { DefaultFieldProps, DefaultPayload } from '../utils/types'\n\nconst _Date = ({ label = null, placeholder = null }: DefaultFieldProps) =>\n(fieldName: String): DefaultPayload => ({\n  type: 'Date',\n  config: {\n    label: label || `${fieldName} Date`,\n    placeholder: placeholder || `${fieldName} value`,\n  }\n})\n\n_Date.Now = createMockContent(() => new Date().toISOString().split('T')[0])\n_Date.Future = createMockContent(() => {\n  let d = new Date()\n  d.setDate(d.getDate() + 7)\n  return d.toISOString().split('T')[0]\n})\n_Date.Past = createMockContent(() => {\n  let d = new Date()\n  d.setDate(d.getDate() - 7)\n  return d.toISOString().split('T')[0]\n})\n\nexport default _Date\n","import { DefaultFieldProps, DefaultPayload } from '../utils/types'\n\nconst GeoPoint = ({ label = null, placeholder = null }: DefaultFieldProps) =>\n(fieldName: String): DefaultPayload => ({\n  type: 'GeoPoint',\n  config: {\n    label: label || `${fieldName} GeoPoint`,\n    placeholder: placeholder || `${fieldName} value`,\n  }\n})\n\nexport default GeoPoint\n","interface ImageFieldProps {\n  constraint: string\n  [x: string]: string\n}\n\ninterface Thumbnail {\n  name: string\n  width: string\n  height: string\n}\n\ninterface ImageFieldPayload {\n  type: string\n  config: {\n    constraint: {\n      width: string\n      height: string\n    }\n    thumbnails: Thumbnail[]\n  }\n}\n\nconst parseString = (str: string, name = null) => {\n  const [width, height] = str.split('x')\n  return {\n    ...name ? {\n      name\n    } : null,\n    height,\n    width,\n  }\n}\n\nconst Image = ({\n  label = null,\n  constraint = \"500x500\",\n  ...thumbnails\n}: ImageFieldProps) =>\n(): ImageFieldPayload => ({\n  type: 'Image',\n  config: {\n    constraint: parseString(constraint),\n    thumbnails: Object.entries(thumbnails ||Â {}).reduce((acc, [key, str]) => ([\n      ...acc,\n      parseString(str, key)\n    ]), [])\n  }\n})\n\nexport default Image\n","import { createMockContent } from '../utils'\n\nexport interface LinkFieldProps {\n  label: string\n  placeholder: string\n  allowTargetBlank?: boolean\n  customTypes?: string[]\n  select?: \"media\" | \"document\"\n}\n\nexport interface LinkFieldPayload {\n  type: string\n  config: {\n    label: string\n    placeholder: string\n    allowTargetBlank?: boolean\n    customtypes?: string[]\n    select?: \"media\" | \"document\"\n  }\n}\n\nconst Link = ({\n  label,\n  placeholder,\n  allowTargetBlank = null,\n  customTypes = null,\n  select = null,\n}: LinkFieldProps = {\n  label: null,\n  placeholder: null,\n}) => (fieldName: string): LinkFieldPayload => ({\n  type: 'Link',\n  config: {\n    label: label || `${fieldName} Link`,\n    placeholder: placeholder || `${fieldName} value`,\n    ...allowTargetBlank ? {\n      allowTargetBlank\n    } : null,\n    ...customTypes ? {\n      customtypes: customTypes\n    } : null,\n    ...select ? {\n      select\n    } : null,\n  }\n})\n\nLink.Href = createMockContent(() => ({\n  link_type: 'Web',\n  url: 'https://github.com/hypervillain/pris-types'\n}))\n\nLink.Document = createMockContent((ct: string = 'fake-document', params = {}) => ({\n  id: \"fake-pris-types-id\",\n  type: ct,\n  tags: [],\n  slug: ct,\n  lang: \"en-us\",\n  link_type: \"Document\",\n  isBroken: false,\n  ...params,\n}))\n\nLink.Media = createMockContent(() => {\n  console.warn('Link.Media is not implemented. Proceeding with Href link.')\n  return {\n    link_type: 'Web',\n    url: 'https://github.com/hypervillain/pris-types'\n  }\n})\n\nexport default Link\n","import { createMockContent } from '../utils'\n\nimport { DefaultFieldProps, DefaultPayload } from '../utils/types'\n\nconst Number = ({ label = null, placeholder = null }: DefaultFieldProps) =>\n(fieldName: String): DefaultPayload => ({\n  type: 'Date',\n  config: {\n    label: label || `${fieldName} Date`,\n    placeholder: placeholder || `${fieldName} value`,\n  }\n})\n\nconst rand = (min: number, max: number) => Math.floor(Math.random() * (max - min) + min)\n\nNumber.Small = createMockContent(() => rand(1, 9))\nNumber.Long = createMockContent(() => rand(1000, 100_000))\nNumber.Negative = createMockContent(() => rand(-1000, -1))\n\nexport default Number\n","export enum RichTextOptionsEnum {\n  p = 'paragraph',\n  pre = 'preformatted',\n  h1 = 'heading1',\n  h2 = 'heading2',\n  h3 = 'heading3',\n  h4 = 'heading4',\n  h5 = 'heading5',\n  h6 = 'heading6',\n  strong = 'strong',\n  em = 'em',\n  link = 'hyperlink',\n  image = 'image',\n  embed = 'embed',\n  list = 'list-item',\n  oList = 'o-list-item',\n  rtl = 'rtl',\n}\n\nexport const RichTextOptions:RichTextOptionsEnum[] = Object.values(RichTextOptionsEnum)\n\nexport interface RichTextProps {\n  label?: string\n  placeholder?: string\n  multi?: Boolean\n  options?: String[]\n}\n\nexport interface RichTextPayload {\n  type: string,\n  config: {\n    label: string\n    multi?: string[],\n    single?: string[],\n    placeholder: string\n  }\n}\n\nconst RichText = ({ label = null, placeholder = null, multi = false, options = RichTextOptions }: RichTextProps) =>\n(fieldName: string): RichTextPayload => ({\n  type: 'StructuredText',\n  config: {\n    label: label || `${fieldName} Richtext`,\n    [multi ? 'multi' : 'single']: options.join(','),\n    placeholder: placeholder || `${fieldName} field`\n  }\n})\n\nconst createConfig = (patternType) => (blocks = 1) => ({\n  config: {\n    patternType,\n    blocks\n  }\n})\n\nRichText.Paragraph = createConfig('PARAGRAPH')\nRichText.Heading = createConfig('HEADING')\nRichText.Story = createConfig('STORY')\n\nexport default RichText","import { createMockContent } from '../utils'\n\ninterface SelectFieldProps {\n  label: string\n  placeholder: string\n  options: string[]\n  defaultValue?: string\n}\n\ninterface SelectFieldPayload {\n  type: string\n  config: {\n    label: string\n    placeholder: string\n    options: string[]\n    default_value?: string\n  }\n}\n\nconst Select = ({\n  label = null,\n  placeholder = null,\n  options = null,\n  defaultValue = null\n\n}: SelectFieldProps = {\n  label: null,\n  placeholder: null,\n  options: ['Option 1', 'Option 2'],\n  defaultValue: null\n}) =>\n(fieldName: String): SelectFieldPayload => ({\n  type: 'Select',\n  config: {\n    label: label || `${fieldName} Select`,\n    placeholder: placeholder || `${fieldName} value`,\n    options,\n    default_value: defaultValue != undefined ? defaultValue : options[0]\n  }\n})\n\nSelect.Option = createMockContent((o: string) => o)\n\nexport default Select\n","import { DefaultFieldProps, DefaultPayload } from '../utils/types'\n\nconst Text = ({ label = null, placeholder = null }: DefaultFieldProps) =>\n(fieldName: String): DefaultPayload => ({\n  type: 'Text',\n  config: {\n    label: label || `${fieldName} Text`,\n    placeholder: placeholder || `${fieldName} value`,\n  }\n})\n\nexport default Text\n","import { createMockContent } from '../utils'\n\nimport { DefaultFieldProps, DefaultPayload } from '../utils/types'\n\nconst Timestamp = ({ label = null, placeholder = null }: DefaultFieldProps) =>\n(fieldName: String): DefaultPayload => ({\n  type: 'Timestamp',\n  config: {\n    label: label || `${fieldName} Timestamp`,\n    placeholder: placeholder || `${fieldName} value`,\n  }\n})\n\nTimestamp.Now = createMockContent(() => new Date().toISOString())\nTimestamp.Future = createMockContent(() => {\n  let d = new Date()\n  d.setDate(d.getDate() + 7)\n  return d.toISOString()\n})\nTimestamp.Past = createMockContent(() => {\n  let d = new Date()\n  d.setDate(d.getDate() - 7)\n  return d.toISOString()\n})\n\nexport default Timestamp\n","interface CommonProps {\n  primary?: any\n  items?: any\n}\n\ninterface MetaProps {\n  title: String\n  description: String\n}\n\ninterface FieldsProps {\n  [x: string]: Function\n}\n\nconst _handleFields = (fields = {}): FieldsProps => {\n  return Object.entries(fields).reduce((acc, [key, fn]) => {\n    if (!fn) {\n      throw new Error(`[pris-types] Unknown helper at key \"${key}\". Exiting.`)\n    }\n    const depth = fn.toString().split('=>').length - 1\n    return {\n      ...acc,\n      // @ts-ignore halp!\n      [key]: depth > 1 ? fn({})(key) : fn(key)\n    }\n  }, {})\n}\n\nexport const variation = (zones) => {\n  const { primary, items, id } = zones\n\n  return {\n    ...id ? { id } : null,\n    primary: _handleFields(primary),\n    items: _handleFields(items),\n  } \n}\n\nexport const shape = (obj: { [x: string]: any; __common?: CommonProps, __meta: MetaProps }) => {\n  const { __common = {}, __meta, ...variations } = obj\n  if (!__meta) {\n    throw new Error('Field \"__meta\" is undefined. It expects properties \"title\" and \"description\".')\n  }\n  if (!__meta.title || !__meta.description) {\n    throw new Error('Field \"__meta\" expects properties \"title\" and \"description\".')\n  }\n  const { title, description } = __meta\n  return {\n    title,\n    description,\n    variations: Object.entries(variations).reduce((acc, [key, variation]) => {\n      return [\n        ...acc,\n        {\n          id: key,\n          primary: {\n            ...variation.primary,\n            ..._handleFields(__common.primary)\n          },\n          items: {\n            ...variation.items,\n            ..._handleFields(__common.items)\n\n          }\n        }\n      ]\n    }, [])\n  }\n}\n","import generate from '@babel/generator'\nimport extract from 'babel-extract-named-export'\nimport { config as defaultReactConfiguration } from 'babel-extract-named-export/babel/react'\n\nimport removeImports from 'babel-plugin-transform-remove-imports'\n\nimport * as Types from './Fields'\n\nimport { hyphenate } from './utils'\n\nfunction validate(Model) {\n  if (!Model || !Model.type || ['CallExpression', 'ObjectExpression'].indexOf(Model.type) === -1){\n    return false\n  }\n  return true\n}\n\n/** Extract Expression from file and validate it */\nconst extractModel = async (code, filename, { plugins = [], presets = [] } = defaultReactConfiguration) => {\n  const { Model, Mocks } = await extract(code, {\n    filename,\n    search: ['Model', 'Mocks'],\n    useToJs: false,\n    plugins: [[removeImports, { test: 'pris-types' }], ...plugins],\n    presets,\n  })\n  if (!validate(Model)) {\n    return { err: true }\n  }\n  return { Model, Mocks }\n}\n\nconst prisGenerate = (Model, Mock, sliceName, { requirePath, build } = { build: '' }) => {\n  const code = {\n    model: generate(Model).code,\n    mock: generate(Mock).code,\n  }\n\n  const req = requirePath || `pris-types/dist/index.${build ? `${build}.` : ''}js`\n  const str = `\n    const { PrisTypes, PrisMocks } = require(\"${req}\")\n    const { ${Object.keys(Types).join(', ')} } = PrisTypes\n    const __prisTypesModel = ${code.model}\n\n    const __prisTypesModelWithId = {\n      id: \"${hyphenate(sliceName)}\",\n      ...__prisTypesModel\n    }\n\n    ${!code.mock ? 'return { model: __prisTypesModelWithId}' : `\n      const __prisMocksMock = PrisMocks.handle(${code.mock}, __prisTypesModel)\n      return {\n        model: __prisTypesModelWithId,\n        mockConfig: __prisMocksMock\n      }\n    `}\n  `\n  try {\n    return eval('(function() {' + str + '}())')\n  } catch(e) {\n    return { error: e }\n  }\n}\n\nexport {\n  extractModel,\n  prisGenerate as generate\n}\n"],"names":["handleField","zone","mocks","fieldKey","variation","id","variationId","__common","mockVariations","handleVariation","mockedFields","Object","entries","primary","reduce","acc","key","maybeField","keys","length","handle","model","variations","maybePrimary","maybeItems","items","createMockContent","fn","content","hyphenateRE","hyphenate","str","replace","toLowerCase","Boolean","label","placeholderFalse","placeholderTrue","defaultValue","fieldName","type","config","placeholder_true","placeholder_false","default_value","undefined","Rand","Math","random","True","False","Color","placeholder","randomColor","Dark","luminosity","Light","_Date","Now","Date","toISOString","split","Future","d","setDate","getDate","Past","GeoPoint","parseString","name","width","height","Image","constraint","thumbnails","Link","allowTargetBlank","customTypes","select","customtypes","Href","link_type","url","Document","ct","params","tags","slug","lang","isBroken","Media","console","warn","Number","rand","min","max","floor","Small","Long","Negative","RichTextOptionsEnum","RichTextOptions","values","RichText","multi","options","join","createConfig","patternType","blocks","Paragraph","Heading","Story","Select","Option","o","Text","Timestamp","_handleFields","fields","Error","depth","toString","zones","shape","obj","__meta","title","description","validate","Model","indexOf","extractModel","code","filename","plugins","presets","defaultReactConfiguration","Mocks","extract","search","useToJs","removeImports","test","err","prisGenerate","Mock","sliceName","requirePath","build","generate","mock","req","Types","eval","e","error"],"mappings":"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"}