{"version":3,"file":"index.module.js","sources":["../src/Mocks/index.ts","../src/utils/index.ts","../src/Fields/Boolean.ts","../src/Fields/Color.ts","../src/Fields/RichText.ts","../src/Fields/alias/Title.ts","../src/Fields/shape.ts","../src/handlers.js"],"sourcesContent":["interface Variation {\n  id: string\n  primary: {\n    [x: string]: any;\n  },\n  items: {\n    [x: string]: any;\n  }\n}\n\ninterface Model {\n  id: string\n  name: string\n  description: string\n  variations: Variation[]\n}\n\nexport const handleField = ({\n  zone,\n  mocks,\n  fieldKey,\n  variation,\n}) => {\n  const { id: variationId } = variation\n  const { __common = {}, ...mockVariations } = mocks\n\n  if (mockVariations?.[variationId]?.[zone]?.[fieldKey]) {\n    return mockVariations[variationId][zone][fieldKey]\n  }\n  if (__common[zone]?.[fieldKey]) {\n    return __common[zone][fieldKey]\n  }\n}\n\nexport const handleVariation = (variation: Variation, zone: string, mocks: { [x: string]: any }) => {\n  const mockedFields = Object.entries(variation.primary).reduce((acc, [key]) => {\n    const maybeField = handleField({\n      zone,\n      mocks,\n      variation,\n      fieldKey: key,\n    })\n    if (maybeField) {\n      return {\n        ...acc,\n        [key]: maybeField\n      }\n    }\n    return acc\n  }, {})\n  return Object.keys(mockedFields).length ? mockedFields : null\n}\n\nexport const handle = (mocks: { [x: string]: any; }, model: Model) => {\n  return model.variations.reduce((acc: { [x: string]: any; }, variation: Variation) => {\n    const maybePrimary = handleVariation(variation, 'primary', mocks)\n    const maybeItems = handleVariation(variation, 'items', mocks)\n    return {\n      ...acc,\n      [variation.id]: {\n        primary: maybePrimary || {},\n        items: maybeItems || {}\n      }\n    }\n  }, {})\n}\n","export const createMockContent = (fn: Function) => () => ({\n  content: fn()\n})\n\nconst camelizeRE = /-(\\w)/g;\nconst hyphenateRE = /\\B([A-Z])/g;\n\nexport const camelize = (str: String) => {\n  return str.replace(/_/g, \"-\").replace(camelizeRE, (_, c) => {\n    return c ? c.toUpperCase() : \"\";\n  })\n}\n\nexport const hyphenate = (str: String) => str.replace(hyphenateRE, \"-$1\").toLowerCase()\n","import { createMockContent } from '../utils'\n\ninterface BooleanProps {\n  label?: String\n  placeholderFalse?: String\n  placeholderTrue?: String\n  defaultValue?: Boolean\n}\n\ninterface BooleanPayload {\n  type: String,\n  config: {\n    label: String\n    placeholder_false: String\n    placeholder_true: String\n    default_value: Boolean\n  }\n}\n\nconst Boolean = ({\n  label,\n  placeholderFalse,\n  placeholderTrue,\n  defaultValue\n}: BooleanProps) => (fieldName: String): BooleanPayload => ({\n  type: 'Boolean',\n  config: {\n    label: label || `${fieldName} value`,\n    placeholder_true: placeholderTrue || 'true',\n    placeholder_false: placeholderFalse || 'false',\n    default_value: defaultValue != undefined ? defaultValue : true\n  }\n})\n\nBoolean.Rand = createMockContent(() => Math.random() > .5 ? true : false)\nBoolean.True = createMockContent(() => true)\nBoolean.False = createMockContent(() => false)\n\nexport default Boolean\n","import randomColor from 'randomcolor'\nimport { createMockContent } from '../utils'\n\nimport { DefaultFieldProps, DefaultFieldConfig } from '../utils/types'\n\ninterface ColorPayload {\n  type: String,\n  config: DefaultFieldConfig\n}\n\nconst Color = ({ label = null, placeholder = null }: DefaultFieldProps) =>\n(fieldName: String): ColorPayload => ({\n  type: 'Color',\n  config: {\n    label: label || `${fieldName} Color`,\n    placeholder: placeholder || `${fieldName} value`,\n  }\n})\n\nColor.Rand = createMockContent(() => randomColor())\nColor.Dark = createMockContent(() => randomColor({ luminosity: 'dark' }))\nColor.Light = createMockContent(() => randomColor({ luminosity: 'light' }))\n\nexport default Color\n","export enum RichTextOptionsEnum {\n  h1 = 'heading1',\n  h2 = 'heading2',\n  h3 = 'heading3',\n  paragraph = \"paragraph\"\n}\n\nexport const RichTextOptions:RichTextOptionsEnum[] = Object.values(RichTextOptionsEnum)\n\nexport interface RichTextProps {\n  placeholder?: String\n  multi?: Boolean\n  options?: String[]\n}\n\nexport interface RichTextPayload {\n  type: String,\n  config: {\n    multi?: String[],\n    single?: String[],\n    placeholder: String\n  }\n}\n\nconst RichText = ({ placeholder = null, multi = false, options = RichTextOptions }: RichTextProps) =>\n(fieldName: String): RichTextPayload => ({\n  type: 'StructuredText',\n  config: {\n    [multi ? 'multi' : 'single']: options.join(','),\n    placeholder: placeholder || `${fieldName} field`\n  }\n})\n\nconst createConfig = (patternType) => (blocks = 1) => ({\n  config: {\n    patternType,\n    blocks\n  }\n})\n\nRichText.Paragraph = createConfig('PARAGRAPH')\nRichText.Heading = createConfig('HEADING')\nRichText.Story = createConfig('STORY')\n\nexport default RichText","import RichText from '../RichText'\nimport { RichTextProps, RichTextPayload } from '../RichText'\n\nenum TitleOptionsEnum {\n  h1 = 'heading1',\n  h2 = 'heading2',\n  h3 = 'heading3',\n  h4 = 'heading4',\n  h5 = 'heading5',\n  b = 'bold',\n  em = 'em'\n}\n\nconst TitleOptions: TitleOptionsEnum[] = Object.values(TitleOptionsEnum)\n\nconst Title = ({ placeholder = null, multi = false, options = TitleOptions }: RichTextProps) =>\n(fieldName: String): RichTextPayload => RichText({ placeholder, multi, options })(fieldName)\n\nObject.entries(RichText).forEach(([key, fn]) => {\n  Title[key] = fn\n})\n\nexport default Title\n","interface CommonProps {\n  primary?: any\n  items?: any\n}\n\ninterface MetaProps {\n  title: String\n  description: String\n}\n\ninterface FieldsProps {\n  [x: string]: Function\n}\n\nconst _handleFields = (fields = {}): FieldsProps => {\n  return Object.entries(fields).reduce((acc, [key, fn]) => {\n    const depth = fn.toString().split('=>').length - 1\n    return {\n      ...acc,\n      // @ts-ignore halp!\n      [key]: depth > 1 ? fn({})(key) : fn(key)\n    }\n  }, {})\n}\n\nexport const variation = (zones) => {\n  const { primary, items, id } = zones\n\n  return {\n    ...id ? { id } : null,\n    primary: _handleFields(primary),\n    items: _handleFields(items),\n  } \n}\n\nexport const shape = (obj: { [x: string]: any; __common?: CommonProps, __meta: MetaProps }) => {\n  const { __common = {}, __meta, ...variations } = obj\n  const { title, description } = __meta\n  return {\n    title,\n    description,\n    variations: Object.entries(variations).reduce((acc, [key, variation]) => {\n      return [\n        ...acc,\n        {\n          id: key,\n          primary: {\n            ...variation.primary,\n            ..._handleFields(__common.primary)\n          },\n          items: {\n            ...variation.items,\n            ..._handleFields(__common.items)\n\n          }\n        }\n      ]\n    }, [])\n  }\n}\n","import generate from '@babel/generator'\nimport extract from 'babel-extract-named-export'\nimport { react as defaultReactConfiguration } from 'babel-extract-named-export/babel'\n\nimport removeImports from 'babel-plugin-transform-remove-imports'\n\nimport * as Types from './Fields'\n\nimport { hyphenate } from './utils'\n\nfunction validate(Model) {\n  if (!Model || !Model.type || ['CallExpression', 'ObjectExpression'].indexOf(Model.type) === -1){\n    return false\n  }\n  return true\n}\n\n/** Extract Expression from file and validate it */\nconst extractModel = async (code, filename, { plugins = [], presets = [] } = defaultReactConfiguration) => {\n  const { Model, Mocks } = await extract(code, {\n    filename,\n    search: ['Model', 'Mocks'],\n    useToJs: false,\n    plugins: [[removeImports, { test: 'pris-types' }], ...plugins],\n    presets,\n  })\n  if (!validate(Model)) {\n    return { err: true }\n  }\n  return { Model, Mocks }\n}\n\nconst prisGenerate = (Model, Mock, sliceName, { requirePath, build } = { build: '' }) => {\n  const code = {\n    model: generate(Model).code,\n    mock: generate(Mock).code,\n  }\n\n  const req = requirePath || `pris-types/dist/index.${build ? `${build}.` : ''}js`\n  const str = `\n    const { PrisTypes, PrisMocks } = require(\"${req}\")\n    const { ${Object.keys(Types).join(', ')} } = PrisTypes\n    const __prisTypesModel = ${code.model}\n\n    const __prisTypesModelWithId = {\n      id: \"${hyphenate(sliceName)}\",\n      ...__prisTypesModel\n    }\n\n    ${!code.mock ? 'return { model: __prisTypesModelWithId}' : `\n      const __prisMocksMock = PrisMocks.handle(${code.mock}, __prisTypesModel)\n      return {\n        model: __prisTypesModelWithId,\n        mockConfig: __prisMocksMock\n      }\n    `}\n  `\n  try {\n    return eval('(function() {' + str + '}())')\n  } catch(e) {\n    console.error(e)\n    return { error: e }\n  }\n}\n\nexport {\n  extractModel,\n  prisGenerate as generate\n}\n"],"names":["handleField","zone","mocks","fieldKey","variation","id","variationId","__common","mockVariations","handleVariation","mockedFields","Object","entries","primary","reduce","acc","key","maybeField","keys","length","handle","model","variations","maybePrimary","maybeItems","items","createMockContent","fn","content","hyphenateRE","hyphenate","str","replace","toLowerCase","Boolean","label","placeholderFalse","placeholderTrue","defaultValue","fieldName","type","config","placeholder_true","placeholder_false","default_value","undefined","Rand","Math","random","True","False","Color","placeholder","randomColor","Dark","luminosity","Light","RichTextOptionsEnum","RichTextOptions","values","RichText","multi","options","join","createConfig","patternType","blocks","Paragraph","Heading","Story","TitleOptionsEnum","TitleOptions","Title","forEach","_handleFields","fields","depth","toString","split","zones","shape","obj","__meta","title","description","validate","Model","indexOf","extractModel","code","filename","plugins","presets","defaultReactConfiguration","Mocks","extract","search","useToJs","removeImports","test","err","prisGenerate","Mock","sliceName","requirePath","build","generate","mock","req","Types","eval","e","console","error"],"mappings":"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"}